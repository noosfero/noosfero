<% edit_mode = controller.send(:boxes_editor?) && controller.send(:uses_design_blocks?) %>
<% box_decorator = edit_mode ? self : BoxesHelper::DontMoveBlocks %>

<%= block_title(block.title) %>

<div class="box" id="box-<%= block.container_box.id %>">
  <%= display_box_content(block.container_box, nil) %>
</div>

<style>
  <% box_decorator.select_blocks(block, block.blocks, { :article => @page, :request_path => request.path, :locale => locale, params: request.params, controller: controller}).each do |child| %>
    #block-<%=block.id%> #block-<%=child.id%> { width: <%= block.child_width(child.id) %>px; }
  <% end %>
</style>

<% if edit_mode %>

  <script>
    jQuery("#block-<%= block.id %>").hover(
      function() {
        enableMoveContainerChildren(<%= block.id %>, <%= block.container_box.id %>);
      }, function() {
        disableMoveContainerChildren(<%= block.id %>, <%= block.container_box.id %>);
      }
    );
  </script>

  <div class="container-block-button-bar button-bar">
    <%= link_to_remote '', :url => { :controller => controller.boxes_holder.kind_of?(Environment) ? 'container_block_plugin_admin' : 'container_block_plugin_myprofile', :action => 'saveWidths', :id => block.id },
                           :with => "containerChildrenWidth(#{block.id}, #{block.container_box.id})",
    :html => {:class => "button icon-save container_block_save", :id => "container_block_save_#{block.id}", :title => c_('Save') },
                           :loading => "open_loading(DEFAULT_LOADING_MESSAGE);",
                           :loaded => "close_loading();",
                           :complete => "display_notice(request.responseText);"%>
  </div>
<% end %>
